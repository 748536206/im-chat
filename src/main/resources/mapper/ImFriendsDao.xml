<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.instant.dao.ImFriendsDao">
  <resultMap id="BaseResultMap" type="com.instant.entity.ImFriends">
    <result column="f_id" jdbcType="INTEGER" property="fId" />
    <result column="f_firendid" jdbcType="INTEGER" property="fFirendid" />
    <result column="f_userid" jdbcType="INTEGER" property="fUserid" />
    <result column="f_name" jdbcType="VARCHAR" property="fName" />
    <result column="f_friendtypeid" jdbcType="INTEGER" property="fFriendtypeid" />
    <result column="f_friendgroupsid" jdbcType="INTEGER" property="fFriendgroupsid" />
  </resultMap>
  <sql id="Query_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Query_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <if test="fields == null">
      f_id, f_firendid, f_userid, f_name, f_friendtypeid, f_friendgroupsid
    </if>
    <if test="fields != null">
      ${fields}
    </if>
  </sql>
  <select id="selectByQuery" parameterType="com.instant.entity.ImFriendsQuery" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from im_friends
    <if test="_parameter != null">
      <include refid="Query_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <delete id="deleteByQuery" parameterType="com.instant.entity.ImFriendsQuery">
    delete from im_friends
    <if test="_parameter != null">
      <include refid="Query_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.instant.entity.ImFriends">
    insert into im_friends (f_id, f_firendid, f_userid, 
      f_name, f_friendtypeid, f_friendgroupsid
      )
    values (#{fId,jdbcType=INTEGER}, #{fFirendid,jdbcType=INTEGER}, #{fUserid,jdbcType=INTEGER}, 
      #{fName,jdbcType=VARCHAR}, #{fFriendtypeid,jdbcType=INTEGER}, #{fFriendgroupsid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.instant.entity.ImFriends">
    insert into im_friends
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fId != null">
        f_id,
      </if>
      <if test="fFirendid != null">
        f_firendid,
      </if>
      <if test="fUserid != null">
        f_userid,
      </if>
      <if test="fName != null">
        f_name,
      </if>
      <if test="fFriendtypeid != null">
        f_friendtypeid,
      </if>
      <if test="fFriendgroupsid != null">
        f_friendgroupsid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fId != null">
        #{fId,jdbcType=INTEGER},
      </if>
      <if test="fFirendid != null">
        #{fFirendid,jdbcType=INTEGER},
      </if>
      <if test="fUserid != null">
        #{fUserid,jdbcType=INTEGER},
      </if>
      <if test="fName != null">
        #{fName,jdbcType=VARCHAR},
      </if>
      <if test="fFriendtypeid != null">
        #{fFriendtypeid,jdbcType=INTEGER},
      </if>
      <if test="fFriendgroupsid != null">
        #{fFriendgroupsid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByQuery" parameterType="com.instant.entity.ImFriendsQuery" resultType="java.lang.Long">
    select count(*) from im_friends
    <if test="_parameter != null">
      <include refid="Query_Where_Clause" />
    </if>
  </select>
  <update id="updateByQuerySelective" parameterType="map">
    update im_friends
    <set>
      <if test="record.fId != null">
        f_id = #{record.fId,jdbcType=INTEGER},
      </if>
      <if test="record.fFirendid != null">
        f_firendid = #{record.fFirendid,jdbcType=INTEGER},
      </if>
      <if test="record.fUserid != null">
        f_userid = #{record.fUserid,jdbcType=INTEGER},
      </if>
      <if test="record.fName != null">
        f_name = #{record.fName,jdbcType=VARCHAR},
      </if>
      <if test="record.fFriendtypeid != null">
        f_friendtypeid = #{record.fFriendtypeid,jdbcType=INTEGER},
      </if>
      <if test="record.fFriendgroupsid != null">
        f_friendgroupsid = #{record.fFriendgroupsid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Query_Where_Clause" />
    </if>
  </update>
  <update id="updateByQuery" parameterType="map">
    update im_friends
    set f_id = #{record.fId,jdbcType=INTEGER},
      f_firendid = #{record.fFirendid,jdbcType=INTEGER},
      f_userid = #{record.fUserid,jdbcType=INTEGER},
      f_name = #{record.fName,jdbcType=VARCHAR},
      f_friendtypeid = #{record.fFriendtypeid,jdbcType=INTEGER},
      f_friendgroupsid = #{record.fFriendgroupsid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Query_Where_Clause" />
    </if>
  </update>
</mapper>